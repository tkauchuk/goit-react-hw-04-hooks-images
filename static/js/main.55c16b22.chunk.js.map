{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","service/images-api.js","service/scroll-to-el.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","searchbar","form","event","preventDefault","trim","length","toLowerCase","type","button","disabled","label","input","value","autoComplete","autoFocus","placeholder","onChange","target","ImageGalleryItem","id","onModalClick","source","alt","largeImageSrc","item","onClick","src","image","Button","isImageLoading","handleLoading","container","color","height","width","timeout","Modal","descr","onModalClose","useEffect","handleEscapeKeydown","code","window","addEventListener","removeEventListener","overlay","currentTarget","modal","getNewImages","url","fetch","then","response","ok","json","Promise","reject","Error","scrollToElement","scrollTo","top","document","documentElement","scrollHeight","behavior","ImageGallery","keyword","images","setImages","page","setPage","error","setError","loading","setLoading","largeImageData","setLargeImageData","hits","state","catch","finally","loader","gallery","map","index","webformatURL","largeImageURL","tags","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55c16b22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__1iBZN\",\"image\":\"ImageGalleryItem_image__2QqjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__3vjxV\",\"button\":\"Button_button__2Ioxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__-xrnb\",\"modal\":\"Modal_modal__2aYT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__3rm7t\",\"form\":\"Searchbar_form__36uAy\",\"button\":\"Searchbar_button___D3LL\",\"label\":\"Searchbar_label__1hvoR\",\"input\":\"Searchbar_input__2OytG\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Searchbar.module.css';\r\n\r\nfunction Searchbar({onSubmit}) {\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n    const onQueryInputChange = event => {\r\n        const { value } = event.target;\r\n        setQuery(value);\r\n    }\r\n\r\n    const onQueryFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (query.trim().length < 1) {\r\n            return;\r\n        }\r\n        onSubmit(query.toLowerCase().trim());\r\n    };\r\n\r\n    return (\r\n      <header className={styles.searchbar}>\r\n          <form className={styles.form} onSubmit={onQueryFormSubmit}>\r\n              <button type='submit' className={styles.button} disabled={!query.trim().length > 0}>\r\n                  <span className={styles.label}>Search</span>\r\n              </button>\r\n              <input\r\n                className={styles.input}\r\n                type='text'\r\n                value={query}\r\n                autoComplete='off'\r\n                autoFocus\r\n                placeholder='Search images and photos'\r\n                onChange={onQueryInputChange}\r\n              />\r\n          </form>\r\n      </header>\r\n    );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func\r\n}\r\n\r\nexport default Searchbar;","import PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ id, onModalClick, source, alt, largeImageSrc }) {\r\n\r\n    return (\r\n      <li className={styles.item} key={id} onClick={() => {onModalClick({ src: largeImageSrc, alt})}}>\r\n          <img src={source} alt={alt} className={styles.image} />\r\n      </li>\r\n    );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    id: PropTypes.number,\r\n    onModalClick: PropTypes.func,\r\n    source: PropTypes.string,\r\n    alt: PropTypes.string,\r\n    largeImageSrc: PropTypes.string\r\n}\r\n\r\nexport default ImageGalleryItem;","import Loader from \"react-loader-spinner\";\r\nimport styles from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({isImageLoading, handleLoading}) {\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n          {\r\n              isImageLoading\r\n                ?\r\n                <Loader\r\n                  type='ThreeDots'\r\n                  color='#00BFFF'\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={3000}\r\n                />\r\n                :\r\n                <button type='button' className={styles.button} onClick={handleLoading}>\r\n                    Load more\r\n                </button>\r\n          }\r\n      </div>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    isImageLoading: PropTypes.bool,\r\n    handleLoading: PropTypes.func\r\n}\r\n\r\nexport default Button;","import PropTypes from 'prop-types';\r\nimport styles from './Modal.module.css';\r\nimport { useEffect } from 'react';\r\n\r\nfunction Modal({source, descr, onModalClose}) {\r\n\r\n    useEffect(() => {\r\n        const handleEscapeKeydown = event => {\r\n            if (event.code === 'Escape') {\r\n                onModalClose(null);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', handleEscapeKeydown);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleEscapeKeydown);\r\n        }\r\n    }, [onModalClose])\r\n\r\n    const handleBackdropClick = event => {\r\n        if (event.target === event.currentTarget) {\r\n            onModalClose(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className={styles.overlay} onClick={handleBackdropClick}>\r\n          <div className={styles.modal}>\r\n              <img src={source} alt={descr} />\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nModal.propTypes = {\r\n    source: PropTypes.string,\r\n    descr: PropTypes.string\r\n}\r\n\r\nexport default Modal;","function getNewImages(url) {\r\n    return fetch(url)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n                    return Promise.reject(new Error('Something went wrong. Try later'));\r\n                })\r\n}\r\n\r\nexport default getNewImages;","function scrollToElement() {\r\n    return window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n            });\r\n}\r\nexport default scrollToElement;","import { useState, Fragment, useEffect, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from \"react-loader-spinner\";\r\nimport styles from './ImageGallery.module.css'\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport Button from \"../Button\";\r\nimport Modal from \"../Modal\";\r\nimport getNewImages from \"../../service/images-api\";\r\nimport scrollToElement from \"../../service/scroll-to-el\";\r\n\r\nconst key = '23015734-ca5f063b9797e09c36ee88a0d';\r\n\r\n\r\nfunction ImageGallery({keyword}) {\r\n    const [images, setImages] = useState([]);\r\n    const [query, setQuery] = useState(null);\r\n    const [page, setPage] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [largeImageData, setLargeImageData] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (keyword === '') {\r\n            return;\r\n        }\r\n        setImages([]);\r\n        setPage(1);\r\n        setQuery({query: keyword});\r\n    }, [keyword])\r\n\r\n    useEffect(() => {\r\n        if (!page) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        const url = `https://pixabay.com/api/?q=${keyword}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\r\n        getNewImages(url)\r\n          .then(({ hits }) => {\r\n               images.length > 0\r\n                ? setImages(state => [...state, ...hits])\r\n                : setImages(hits);\r\n          })\r\n          .then(() => {\r\n              if (page === 1) {\r\n                  return;\r\n              }\r\n              scrollToElement();\r\n          })\r\n          .catch(error => setError(error))\r\n          .finally(() => setLoading(false));\r\n    }, [page, query]) //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onLoadMoreButtonClick = () => {\r\n        setPage(state => state + 1);\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n          {error && (\r\n            <h1>{error}</h1>\r\n          )}\r\n          {loading && (\r\n            <div className={styles.loader}>\r\n                <Loader\r\n                  type='ThreeDots'\r\n                  color='#00BFFF'\r\n                  height={100}\r\n                  width={100}\r\n                  timeout={3000}\r\n                />\r\n            </div>)}\r\n          {images.length > 0 && (\r\n            <Fragment>\r\n                <ul className={styles.gallery}>{\r\n                    images.map(({ id, webformatURL, largeImageURL, tags }, index) => {\r\n                        return (\r\n                          <ImageGalleryItem\r\n                            onModalClick={setLargeImageData}\r\n                            key={index}\r\n                            id={id}\r\n                            source={webformatURL}\r\n                            alt={tags}\r\n                            largeImageSrc={largeImageURL}\r\n                          />\r\n                        );\r\n                    })\r\n                }\r\n                </ul>\r\n                <Button\r\n                  handleLoading={onLoadMoreButtonClick}\r\n                  isImageLoading={loading}\r\n                />\r\n                {\r\n                    largeImageData && (\r\n                      <Modal\r\n                        source={largeImageData.src}\r\n                        descr={largeImageData.alt}\r\n                        onModalClose={setLargeImageData}\r\n                      />\r\n                    )}\r\n            </Fragment>\r\n          )}\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    keyword: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery;","import { useState } from 'react';\nimport './App.css'\n\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n\n  return (\n    <div className='AppContainer'>\n      <Searchbar\n        onSubmit={setQuery}\n      />\n      <ImageGallery\n        keyword={query}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"ImageGallery_loader__1ZZ17\",\"gallery\":\"ImageGallery_gallery__jb3iq\"};"],"sourceRoot":""}